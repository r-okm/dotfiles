{
  "console.log({  })": {
    "prefix": "clg({",
    "body": [
      "console.log({ $0 })"
    ],
    "description": "console.log({  })"
  },
  "console.log(\"\")": {
    "prefix": "clg(\"",
    "body": [
      "console.log(\"$0\")"
    ],
    "description": "console.log(\"\")"
  },
  "console.log()": {
    "prefix": "clg(",
    "body": [
      "console.log($0)"
    ],
    "description": "console.log()"
  },
  "useEffect": {
    "prefix": "useeffect",
    "body": [
      "useEffect(() => {",
      "  $0",
      "}, [])"
    ],
    "description": "useEffect"
  },
  "useCallback": {
    "prefix": "usecallback",
    "body": [
      "useCallback(() => {",
      "  $0",
      "}, [])"
    ],
    "description": "useCallback"
  },
  "useMemo": {
    "prefix": "usememo",
    "body": [
      "useMemo(() => {",
      "  $0",
      "}, [])"
    ],
    "description": "useMemo"
  },
  "useState": {
    "prefix": "usestate",
    "body": [
      "const [${1:first}, set${1/(.*)/${1:/capitalize}/}] = useState(${2:second})"
    ],
    "description": "useState"
  }
}
