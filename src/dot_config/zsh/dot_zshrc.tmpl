# vim: set ft=sh:

source $ZDOTDIR/functions.zsh

# bindkey
bindkey -e
bindkey "^[[3~" delete-char
bindkey "^[[H" beginning-of-line
bindkey "^[[F" end-of-line

zle -N fzf_command_history
bindkey '^r' fzf_command_history

# setopt
setopt nobeep
setopt nolistbeep
setopt correct
setopt auto_cd

cdpath=(
  $PROJECT_DIR
  $cdpath
)

# Completion
fpath=(
  $ZDOTDIR/completions
  $fpath
)
autoload -Uz compinit && compinit
# ignore case
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' menu select

# Alias
if [ -x /usr/bin/dircolors ]; then
  test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
  alias ls='ls --color=auto'
  alias dir='dir --color=auto'
  alias vdir='vdir --color=auto'
  alias grep='grep --color=auto'
  alias fgrep='fgrep --color=auto'
  alias egrep='egrep --color=auto'
fi

alias cp='cp -i'
alias mv='mv -i'
alias rm='rm -I'

{{ if eq .chezmoi.os "windows" }}
source $ZDOTDIR/alias.zsh
{{ end }}

{{ if eq .chezmoi.os "linux" }}
{{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") }}
# custom_code
alias code='custom_code'
compdef custom_code=code
{{   end }}
{{ end }}

# Application specific settings
# Homebrew
if type "brew" > /dev/null 2>&1; then
  fpath=(
    $HOMEBREW_PREFIX/share/zsh/site-functions
    $fpath
  )
fi
# asdf
if [ -e "$HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh" ]; then
  source $HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh
  fpath=(
    $(brew --prefix asdf)/etc/bash_completion.d
    $fpath
  )
fi

if [ -e "$HOME/.asdf/plugins/java/set-java-home.zsh" ]; then
  . $HOME/.asdf/plugins/java/set-java-home.zsh
fi

# ========================== zsh-hooks ==========================
precmd() {
  # 前回のコマンドの終了コードを記録
  export PREVIOUS_EXIT_CODE=$?

  # Promptの更新
  PROMPT=`prompt_format_2`

  # windows terminal のタブタイトルを指定する
  local current_dir=$(basename $PWD)
  windows_terminal_tab_title $current_dir
}
precmd_functions+=(_windows_terminal_osc_9_9)

# ========================== source ==========================
# sheldon
if type "sheldon" > /dev/null 2>&1; then
  eval "$(sheldon source)"
fi

# zsh-abbr, fast-syntax-highlighting
if [[ -n $FAST_HIGHLIGHT ]]; then
  for abbr in ${(f)"$(abbr list-abbreviations)"}; do
    if [[ $abbr != *' '* ]]; then
      register_single_word_chroma ${(Q)abbr}
    fi
  done
fi
