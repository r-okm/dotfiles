# vim: set ft=sh:

# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

source_if_exists() {
  local file_to_source="$1"
  if [ -f "$file_to_source" ]; then
    # shellcheck disable=SC1090
    . "$file_to_source"
  else
    local current_script_file
    current_script_file=$(basename "$0")
    echo "[WARN][$current_script_file] File '$file_to_source' does not exist."
  fi
}

setup_ssh_agent_wsl() {
  export SSH_AUTH_SOCK=$HOME/.ssh/agent.sock

  if ! ss -a | grep -q "$SSH_AUTH_SOCK"; then
      rm -f "$SSH_AUTH_SOCK"
      (setsid socat UNIX-LISTEN:"$SSH_AUTH_SOCK",fork EXEC:'npiperelay -ei -s //./pipe/openssh-ssh-agent',nofork &) >/dev/null 2>&1
  fi
}

main() {
  export XDG_CONFIG_HOME="$HOME/.config"
  export XDG_CACHE_HOME="$HOME/.cache"
  export XDG_DATA_HOME="$HOME/.local/share"
  export XDG_STATE_HOME="$HOME/.local/state"

  export LANG=C.UTF-8
  export CLICOLOR=1
  export EDITOR='nvim'
  export EDITOR_EDIT_COMMAND_LINE="nvim -u '$XDG_CONFIG_HOME/nvim/edit_command_line.lua'"
  export MANPAGER="sh -c 'col -bx | bat -l man -p'"
  export FZF_DEFAULT_OPTS='--bind ctrl-v:toggle-preview,ctrl-f:half-page-down,ctrl-b:half-page-up,ctrl-d:preview-half-page-down,ctrl-u:preview-half-page-up'
  export BROWSER='vivaldi'

  # set PATH so it includes user's private bin if it exists
  if [ -d "$HOME/.local/bin" ]; then
    PATH="$HOME/.local/bin:$PATH"
  fi

  # neovim
  PATH="$HOME/neovim/bin:$PATH"

  # asdf
  export ASDF_DATA_DIR="$XDG_DATA_HOME/asdf"
  export PATH="$ASDF_DATA_DIR/shims:$PATH"
  export ASDF_CONFIG_FILE="$XDG_CONFIG_HOME/asdf/.asdfrc"

  # go
  PATH="${GOROOT:-/usr/local/go}/bin:${GOPATH:-$HOME/go}/bin:$PATH"

  # deno
  export DENO_INSTALL="$HOME/.deno"
  export PATH="$DENO_INSTALL/bin:$PATH"

  # add Windows bin directory to PATH(for WSL2)
  if [ -d '/mnt/c/bin' ]; then
    export PATH="$PATH:/mnt/c/bin"
  fi

  source_if_exists "$HOME/.cargo/env"
  {{ if eq .chezmoi.os "linux" -}}
  {{   if (.chezmoi.kernel.osrelease | lower | contains "microsoft") -}}

  setup_ssh_agent_wsl
  {{   end -}}
  {{ end -}}

  # env vars managed with chezmoi
  export GITHUB_COPILOT_MODEL='{{ .github_copilot_model }}'
}

main
